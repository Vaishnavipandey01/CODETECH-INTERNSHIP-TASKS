HERE THE EXAMPLE OF HOW WE CAN CREATE A SIMPLE STATIC WEBSITE FOR A DEVELOPER'S PORTFOLIO USING HTML,CSS AND JAVASCRIPT.
PROJECT STRUCTURE:
• index.html(HTML structure)
• style.css(CSS styles)
• scripts.js(Javascript functionality)
1. index.html (HTML)
This file provides the structure of the portfolio site.
#html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Developer Portfolio">
    <title>Developer Portfolio</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <!-- Navigation Bar -->
    <header>
        <nav>
            <ul>
                <li><a href="#home">Home</a></li>
                <li><a href="#about">About Me</a></li>
                <li><a href="#projects">Projects</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>
        </nav>
    </header>

    <!-- Home Section -->
    <section id="home">
        <div class="intro">
            <h1>Hi, I'm John Doe</h1>
            <p>Full Stack Developer | JavaScript Enthusiast | Open Source Contributor</p>
        </div>
    </section>

    <!-- About Me Section -->
    <section id="about">
        <h2>About Me</h2>
        <p>I'm a passionate developer who loves building web applications. I have experience working with JavaScript, HTML, CSS, React, and Node.js. I enjoy solving problems and continuously learning new technologies.</p>
    </section>

    <!-- Projects Section -->
    <section id="projects">
        <h2>My Projects</h2>
        <div class="projects">
            <div class="project">
                <h3>Project 1: Portfolio Website</h3>
                <p>This is my personal portfolio website, where I showcase my skills and projects.</p>
                <a href="https://github.com/johndoe/portfolio" target="_blank">View on GitHub</a>
            </div>
            <div class="project">
                <h3>Project 2: Weather App</h3>
                <p>A weather application built with React that displays current weather conditions based on user input.</p>
                <a href="https://github.com/johndoe/weather-app" target="_blank">View on GitHub</a>
            </div>
        </div>
    </section>

    <!-- Contact Section -->
    <section id="contact">
        <h2>Contact Me</h2>
        <p>If you'd like to get in touch, feel free to reach out!</p>
        <form id="contact-form">
            <input type="text" id="name" placeholder="Your Name" required>
            <input type="email" id="email" placeholder="Your Email" required>
            <textarea id="message" placeholder="Your Message" required></textarea>
            <button type="submit">Send Message</button>
        </form>
        <div id="form-response"></div>
    </section>

    <footer>
        <p>© 2025 John Doe | All rights reserved</p>
    </footer>

    <script src="scripts.js"></script>
</body>
</html>
2. styles.css(CSS)
This file adds styling to the website.
#css
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    line-height: 1.6;
}

header {
    background: #333;
    padding: 10px;
}

nav ul {
    list-style: none;
    display: flex;
    justify-content: center;
}

nav ul li {
    margin: 0 15px;
}

nav ul li a {
    color: #fff;
    text-decoration: none;
    font-weight: bold;
}

#home {
    background: #f4f4f4;
    text-align: center;
    padding: 50px 0;
}

#home h1 {
    font-size: 2.5em;
}

#about, #projects, #contact {
    padding: 50px 20px;
    text-align: center;
}

#projects .projects {
    display: flex;
    justify-content: center;
    gap: 30px;
}

#projects .project {
    width: 300px;
    background: #f0f0f0;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

form input, form textarea {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    border: 1px solid #ccc;
    border-radius: 4px;
}

button {
    padding: 10px 20px;
    background-color: #333;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

footer {
    background: #333;
    color: #fff;
    text-align: center;
    padding: 20px;
}

footer p {
    font-size: 0.9em;
}
3. scripts.js (JavaScript)
This file adds basic interactivity to the website(like form validation).
#javascript
document.getElementById('contact-form').addEventListener('submit', function(e) {
    e.preventDefault();

    const name = document.getElementById('name').value;
    const email = document.getElementById('email').value;
    const message = document.getElementById('message').value;
    
    if (name && email && message) {
        document.getElementById('form-response').textContent = "Thank you for your message!";
        document.getElementById('contact-form').reset();
    } else {
        document.getElementById('form-response').textContent = "Please fill in all fields.";
        document.getElementById('form-response').style.color = "red";
    }
});
HOW IT WORKS:
• HTML:HTML provides the structure, with sections for Home,AboutMe,Projects,and Contact.
• CSS:CSS adds a clean,modern layout with a responsive design.
• JavaScript:JavaScript validates the contact form to ensure all fields are filled in before submission and provides a response message.
INSTRUCTIONS TO USE:
1. Save the above code into three files:
   • index.html
   • styles.css
   • scripts.js
2. Open index.html in any browser to view the developer portfolio.
3. Customize it furthur with your own information,style, and projects.
KEY FEATURES AND ENHANCEMENTS:
1. Responsive Navigation:
   • ON smaller screens(like mobile),the navigation menu becomes a hamburger menu.
   • On larger screens(like tablets and desktops),the navigation is horizontal.
2. FLEXIBLE LAYOUTS:
   • The projects section uses flexible to adjust the number of columns depending on 
     screen size.On mobile devices, the projects will stack vertically, while on larger 
     screens,they will appear in rows.
3. RESPONSIVE TYPOGRAPHY:
   • The text size is adjusted for different screen sizes to ensure it's readable and 
     well-proportioned.
